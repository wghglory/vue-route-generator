#!/usr/bin/env node

const program = require('commander');
const symbols = require('log-symbols');
const chalk = require('chalk');
const path = require('path');

const folderDir = '../vue-template';

// console.log(process.argv)
program.action(() => {
  console.log('refresh .... ');
});
program.parse(process.argv);

const fs = require('fs');
const handlebars = require('handlebars');

// 获取页面列表
const list = fs
  .readdirSync(path.resolve(folderDir, './src/views'))
  .filter((v) => v !== 'Home.vue')
  .map((v) => ({
    name: v.replace('.vue', '').toLowerCase(),
    file: v,
  }));

// 生成路由定义
compile(
  {
    list,
  },
  path.resolve(folderDir, './src/router.js'),
  path.resolve(folderDir, './template/router.js.hbs'),
);

// 生成菜单
compile(
  {
    list,
  },
  path.resolve(folderDir, './src/App.vue'),
  path.resolve(folderDir, './template/App.vue.hbs'),
);

/**
 * 编译模板文件
 * @param meta 数据定义
 * @param filePath 目标文件路径
 * @param templatePath 模板文件路径
 */
function compile(meta, filePath, templatePath) {
  if (fs.existsSync(templatePath)) {
    const content = fs.readFileSync(templatePath).toString();
    const result = handlebars.compile(content)(meta);
    fs.writeFileSync(filePath, result);
  }
  console.log(symbols.success, chalk.green(`🚀${filePath} 创建成功`));
}
